
#2c3e50


state = {
  temperature: undefined,
  city: undefined,
  country: undefined,
  humidity: undefined,
  description: undefined,
  error: undefined
}

getWeather =  async (e) => {
e.preventDefault()
const city = e.target.elements.city.value;
const country = e.target.elements.country.value;

  const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);

  const data = await api_call.json();
  if (city && country) {
  this.setState({
    temperature: data.main.temp,
    city: data.name,
    country: data.sys.country,
    humidity: data.main.humidity,
    description: data.weather[0].description,
    error: ""

  })
} else {
  this.setState({
    temperature: undefined,
    city: undefined,
    country: undefined,
    humidity: undefined,
    description: undefined,
    error: "Please enter city and country"

  })
}
}




<div className="container">
  <div className="row">
    <div className="col-xs-5 title-container">
      <Titles />
  </div>
  <div className="col-xs-7 form-container">
  <Form getWeather={this.getWeather}/>
  <Weather
    temperature={this.state.temperature}
    city={this.state.city}
    country={this.state.country}
    humidity={this.state.humidity}
    description={this.state.description}
    error={this.state.error}
  />
  </div>
</div>
</div>
</div>

Temperature:
// {this.state.temperature}
// </p>
// <p>
// Humidity:
// {this.state.humidity}
// </p>
// <p>
// Description:
// {this.state.description}
// </p>
// <p>
// Wind Speed:
// {this.state.windspeed}
// </p>
// The Day After
// <p>
// Temperature:
// {this.state.temperature1}
// </p>
// <p>
// Humidity:
// {this.state.humidity1}
// </p>
// <p>
// Description:
// {this.state.description1}
// </p>
// <p>
// Wind Speed:
// {this.state.windspeed1}
// </p>
